# This is a basic workflow to help you get started with Actions

name: CI Unittests

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    # Nightly run unit tests to check for implicit dependency issues between pull requests.
    - cron: '0 0 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
# NOTE: Github actions does not support anchors apparently. Forgive duplication of job
#       steps.
jobs:
  lint:
    runs-on: ubuntu-latest
    container: python:3.6
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Cache local python environment artifacts for the current python version
      # and poetry lockfile hash.
      - uses: actions/cache@v2
        id: env-cache
        with:
          # Confirmed that the `.local` directory doesn't exist until the
          # `pip install --user` is invoked below, so we can be confident that
          # only our python stuff is being captured in this cache (intentional).
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry/virtualenvs/
            ~/.local
          key: python-3.6-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            python-3.6-
      - name: Setup Environment
        uses: ./.github/actions/python-poetry-setup
      - name: Lint with Flake8
        run: poetry run flake8

  typecheck:
    runs-on: ubuntu-latest
    container: python:3.6
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Cache local python environment artifacts for the current python version
      # and poetry lockfile hash.
      - uses: actions/cache@v2
        id: env-cache
        with:
          # Confirmed that the `.local` directory doesn't exist until the
          # `pip install --user` is invoked below, so we can be confident that
          # only our python stuff is being captured in this cache (intentional).
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry/virtualenvs/
            ~/.local
          key: python-3.6-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            python-3.6-
      - name: Setup Environment
        uses: ./.github/actions/python-poetry-setup
      - name: Typecheck with MyPy
        run: poetry run mypy

  # This workflow contains a single job called "build"
  pytest:
    # Running in containers, so this unknown environment is fine.
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9]
      # We want all python versions tested even if one of them happens to fail
      fail-fast: false

    container: python:${{ matrix.python-version }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Cache local python environment artifacts for the current python version
      # and poetry lockfile hash.
      # Caching occurs on a successfully completing job (e.g. after running
      # pytest in this job's case).
      - uses: actions/cache@v2
        id: env-cache
        with:
          # Confirmed that the `.local` directory doesn't exist until the
          # `pip install --user` is invoked below, so we can be confident that
          # only our python stuff is being captured in this cache (intentional).
          path: |
            ~/.cache/pip
            ~/.cache/pypoetry/virtualenvs/
            ~/.local
          key: python-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            python-${{ matrix.python-version }}-

      - name: Setup Environment
        uses: ./.github/actions/python-poetry-setup

      - name: Run Unittests
        run: poetry run pytest --cov=smqtk_core --cov-config=.pytest.coveragerc

